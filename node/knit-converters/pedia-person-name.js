// Generated by CoffeeScript 1.6.2
(function() {
  var name_query, parse, _q;

  _q = require("./pedia-query");

  name_query = "select distinct ?s, ?given_name, ?sur_name, ?name, ?label, ?foaf_name\nwhere\n{\n?s ?p ?o.\noptional { ?s foaf:givenName ?given_name }\noptional { ?s foaf:surname ?sur_name }\noptional { ?s dbpprop:name ?name }\noptional { ?s rdfs:label ?label }\noptional { ?s foaf:name ?foaf_name }\nFILTER (?s = <{0}>)\n}";

  parse = function(bindings) {
    var en_name, foaf_name, foaf_name_lang, i, id, item, name, name_lang, spt, spts, _i, _len;

    i = bindings[0];
    id = i.s.value;
    if (i.sur_name) {
      en_name = (i.sur_name.value + " " + i.given_name.value).toLocaleLowerCase();
    } else {
      spts = id.match(/^(.*)\/(.*)$/)[2].split('_');
      en_name = (spts[1] + " " + spts[0]).toLocaleLowerCase();
    }
    item = {
      id: id,
      en_name: en_name,
      ru_name: null
    };
    for (_i = 0, _len = bindings.length; _i < _len; _i++) {
      i = bindings[_i];
      if (!item.ru_name) {
        if (i.name) {
          name = i.name.value.toLowerCase();
          name_lang = i.name["xml:lang"];
        }
        if (i.foaf_name) {
          foaf_name = i.foaf_name.value.toLowerCase();
          foaf_name_lang = i.foaf_name["xml:lang"];
        }
        if (name_lang === "en") {
          if (name.match(/^[\u0400-\u04FF\s]+$/gi)) {
            item.ru_name = name;
          }
        }
        if (foaf_name_lang === "en") {
          if (foaf_name.match(/[\u0400-\u04FF]+/gi)) {
            item.ru_name = foaf_name;
          }
        }
        if (item.ru_name) {
          spt = item.ru_name.split(" ");
          if (spt.length === 3) {
            if (spt[0].indexOf(',') !== -1) {
              item.ru_name = item.ru_name.replace(/,/g, '');
            } else {
              item.ru_name = "" + spt[2] + " " + spt[0] + " " + spt[1];
            }
          } else {
            item.ru_name = "" + spt[1] + " " + spt[0];
          }
        }
      }
    }
    return item;
  };

  module.exports = function(uri, s, done) {
    var q;

    q = name_query.replace("{0}", s);
    return _q(uri, q, function(err, b) {
      var d;

      if (!err) {
        d = parse(b);
      }
      return done(err, d);
    });
  };

}).call(this);

/*
//@ sourceMappingURL=pedia-person-name.map
*/
