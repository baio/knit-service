// Generated by CoffeeScript 1.6.2
(function() {
  define(["ural/bindings/tag-edit"], function() {
    return ko.bindingHandlers.tageditWithScheme = {
      init: function(element, valueAccessor, allBindingsAccessor, viewModel) {
        var _opts;

        _opts = allBindingsAccessor().tageditOpts;
        if (_opts == null) {
          _opts = {};
        }
        _opts.filterParams = {
          index: function() {
            var opts;

            opts = allBindingsAccessor().tageditOpts;
            return opts.scheme.index;
          },
          type: function() {
            var opts;

            opts = allBindingsAccessor().tageditOpts;
            if (Array.isArray(opts.scheme.type)) {
              return opts.scheme.type.join(",");
            } else {
              return opts.scheme.type;
            }
          }
        };
        _opts.getDefault = function(label) {
          var default_type, opts, type;

          opts = allBindingsAccessor().tageditOpts;
          default_type = opts.scheme.default_type;
          if (!default_type) {
            type = opts.scheme.type;
            default_type = Array.isArray(type) ? type[0] : type;
          }
          return {
            key: label,
            label: label,
            value: label,
            data: {
              key: label,
              label: label,
              val: label,
              type: default_type
            }
          };
        };
        return ko.bindingHandlers.tagedit.init(element, valueAccessor, allBindingsAccessor, viewModel);
      },
      update: function(element, valueAccessor, allBindingsAccessor) {
        return ko.bindingHandlers.tagedit.update(element, valueAccessor, allBindingsAccessor);
      }
    };
  });

}).call(this);

/*
//@ sourceMappingURL=tag-editWithScheme.map
*/
