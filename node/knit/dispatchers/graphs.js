// Generated by CoffeeScript 1.6.2
(function() {
  var async, cache, es, request, _del;

  request = require("./request");

  cache = require("./cache/redis");

  async = require("async");

  es = require("event-stream");

  _del = function(ref) {
    return es.join(function(err) {
      console.log("delete graph from cache : " + err);
      if (!err) {
        console.log(ref);
        return cache.del("graph", ref);
      }
    });
  };

  exports.get = function(req, res) {
    var ref;

    ref = req.query ? req.query.graph : null;
    return async.waterfall([
      function(ck) {
        if (req.query.context !== "data") {
          return cache.get("graph", ref, ck);
        } else {
          return ck(null, null);
        }
      }, function(r, ck) {
        if (!r) {
          return request.req(req, res, "graphs", true, es.join(ck));
        } else {
          console.log("graph found in cache it's allrigth!");
          res.writeHead(200, {
            'Content-Type': 'application/json'
          });
          r = JSON.parse(r);
          r.isYours = req.user && req.user.name === r.owner;
          res.write(JSON.stringify(r));
          res.end();
          return ck(null, null);
        }
      }
    ], function(err, data) {
      if (!err && data && req.query.context !== "data") {
        return cache.set("graph", ref, data);
      }
    });
  };

  exports.post = function(req, res) {
    return request.req(req, res, "graphs", true);
  };

  exports.put = function(req, res) {
    return request.req(req, res, "graphs", true, _del(req.body.id));
  };

  exports.patch = function(req, res) {
    return request.req(req, res, "graphs", true, _del(req.body.id));
  };

  exports["delete"] = function(req, res) {
    return request.req(req, res, "graphs", true, _del(req.body.id));
  };

}).call(this);

/*
//@ sourceMappingURL=graphs.map
*/
